# -*- Python -*-

import os
import sys
import re
import platform

try:
   import lit.util
   import lit.formats
except ImportError:
   pass

config.name = 'Seahorn'

config.test_format = lit.formats.ShTest(execute_external=False)
config.suffixes = ['.c']
config.excludes = []

config.test_source_root = os.path.dirname(__file__)
config.test_exec_root = lit_config.params.get('test_dir', '.')

def addEnv(name):
   if name in os.environ:
      config.environment[name] = os.environ[name]

def isexec (fpath):
    if fpath == None: return False
    return os.path.isfile(fpath) and os.access(fpath, os.X_OK)

def which(program):
   if isinstance (program, str): 
      choices = [program]
   else:
      choices = program
   for p in choices:
      fpath, fname = os.path.split(p)
      if fpath:
         if isexec (p): return p
      else:
         for path in os.environ["PATH"].split(os.pathsep):
            exe_file = os.path.join(path, p)
            if isexec (exe_file):
               return exe_file
   return None

def getSea ():
   seahorn = None
   if 'SEAHORN' in os.environ: 
      seahorn = os.environ ['SEAHORN']
   if not isexec (seahorn):
      seahorn = os.path.join (repositoryRoot, 'build', 'run', 'bin', 'sea')
   if not isexec (seahorn): 
      seahorn = which ('sea')
   return seahorn

addEnv('HOME')
addEnv('PWD')
addEnv('C_INCLUDE_PATH')

repositoryRoot = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
lit_config.note('Repository root is {}'.format(repositoryRoot))


sea_cmd = getSea()
if not isexec(sea_cmd):
   lit_config.fatal('Could not find the Seahorn executable at {}'.format(sea_cmd))   

config.substitutions.append(('%sea', sea_cmd))

